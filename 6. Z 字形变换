/*
将一个给定字符串 s 根据给定的行数 numRows ，以从上往下、从左到右进行 Z 字形排列。

比如输入字符串为 "PAYPALISHIRING" 行数为 3 时，排列如下：

P   A   H   N
A P L S I I G
Y   I   R
之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如："PAHNAPLSIIGYIR"。

请你实现这个将字符串进行指定行数变换的函数：

string convert(string s, int numRows);
 

示例 1：

输入：s = "PAYPALISHIRING", numRows = 3
输出："PAHNAPLSIIGYIR"
示例 2：
输入：s = "PAYPALISHIRING", numRows = 4
输出："PINALSIGYAHRPI"
解释：
P     I    N
A   L S  I G
Y A   H R
P     I
示例 3：

输入：s = "A", numRows = 1
输出："A"
 

提示：

1 <= s.length <= 1000
s 由英文字母（小写和大写）、',' 和 '.' 组成
1 <= numRows <= 1000
*/



class Solution {
    public String convert(String s, int numRows) {

        int len = s.length(); 
        if (numRows == 1 || numRows >= len) {
            return s;
        }
        StringBuffer[] sb = new StringBuffer[numRows];
        for(int i = 0; i < numRows; i++){
            sb[i] = new StringBuffer();
        }
        int t = numRows * 2 - 2; //2 * numRows - 2 为一个周期

        int row = 0;
        for(int i = 0; i < len; i++){//开始模拟
            sb[row].append(s.charAt(i));
            if(i % t < numRows - 1){//利用周期和行的关系判断是向下还是右上
                row ++;
            }else{
                row --;
            }
        }

        StringBuffer res = new StringBuffer();
        for(StringBuffer ss : sb){
            res.append(ss);
        }
        return res.toString();
    }
}
